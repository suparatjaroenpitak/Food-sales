@model List<TestQuit.Models.Food>
@{
    ViewBag.Title = "Food List";
}
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<style>
   
 
</style>

<h2>Food List</h2>
<div id="tableContainer">
    <div class="toolbar">
        <label>ค้นหา Product:</label>
        <input type="text" id="searchProduct" placeholder="Type product name..." />
        <button id="btnSearch">Search</button>
        <label>กรองวันที่:</label>
        <input type="text" id="filterDate" />
        <input type="hidden" id="hiddenDate" name="filterDate" />
        <button id="btnFilter">Filter</button>
        <button id="btnRefresh">Refresh</button>
        <button id="btnCreate">Create New</button>
    </div>
    <div id="message"></div>
    <table id="foodTable">
        <thead>
            <tr>
                <th data-sort-by="OrderDate">OrderDate</th>
                <th data-sort-by="Region">Region</th>
                <th data-sort-by="City">City</th>
                <th data-sort-by="Category">Category</th>
                <th data-sort-by="Product">Product</th>
                <th data-sort-by="Quantity">Quantity</th>
                <th data-sort-by="UnitPrice">UnitPrice</th>
                <th data-sort-by="TotalPrice">TotalPrice</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var food in Model)
            {
                <tr>
                    <td>@food.OrderDate</td>
                    <td>@food.Region</td>
                    <td>@food.City</td>
                    <td>@food.Category</td>
                    <td>@food.Product</td>
                    <td>@food.Quantity</td>
                    <td>@food.UnitPrice</td>
                    <td>@food.TotalPrice</td>
                    <td>
                        <button class="btnEdit" data-orderdate="@food.OrderDate"
                                data-region="@food.Region"
                                data-city="@food.City"
                                data-category="@food.Category"
                                data-product="@food.Product"
                                data-quantity="@food.Quantity"
                                data-unitprice="@food.UnitPrice"
                                data-totalprice="@food.TotalPrice">
                            Edit
                        </button>
                        <button class="btnDelete" data-orderdate="@food.OrderDate"
                                data-region="@food.Region"
                                data-product="@food.Product">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="editModal" class="modal">
    <div class="modal-content">
        <span class="close" id="closeEditModal">&times;</span>
        <h3>แก้ไขข้อมูล</h3>
        <input type="hidden" id="editOrderDate" />
        <input type="hidden" id="editRegion" />
        <input type="hidden" id="editProduct" />
        <label>Quantity:</label>
        <input type="text" id="editQuantity" />
        <label>UnitPrice:</label>
        <input type="text" id="editUnitPrice" />
        <button id="btnSaveEdit">Save</button>
        <button id="btnCancelEdit">Cancel</button>
    </div>
</div>

<div id="createModal" class="modal">
    <div class="modal-content">
        <span class="close" id="closeCreateModal">&times;</span>
        <h3>สร้างข้อมูลใหม่</h3>
        <form id="createForm">
            <label>OrderDate:</label>
            <input type="text" id="createOrderDate" />
            <label>Region:</label>
            <input type="text" id="createRegion" />
            <label>City:</label>
            <input type="text" id="createCity" />
            <label>Category:</label>
            <input type="text" id="createCategory" />
            <label>Product:</label>
            <input type="text" id="createProduct" />
            <label>Quantity:</label>
            <input type="text" id="createQuantity" />
            <label>UnitPrice:</label>
            <input type="text" id="createUnitPrice" />
            <button type="button" id="btnSaveCreate">Save</button>
            <button type="button" id="btnCancelCreate">Cancel</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ui-datepicker/1.13.2/i18n/datepicker-th.min.js"></script>
    <script>
        $(function () {
            // Function to update the table body with new data
          function updateTable(response) {
    var tableBody = $("#foodTable tbody");
    tableBody.empty(); 
    if (response && response.length > 0) {
        $.each(response, function (index, food) {

            var orderDate = food.OrderDate ? food.OrderDate.substring(0, 10) : '';
            var newRow = `<tr>
                <td>${orderDate}</td>
                <td>${food.Region}</td>
                <td>${food.City}</td>
                <td>${food.Category}</td>
                <td>${food.Product}</td>
                <td>${food.Quantity}</td>
                <td>${food.UnitPrice}</td>
                <td>${food.TotalPrice}</td>
                <td>
                    <button class="btnEdit" data-orderdate="${orderDate}"
                            data-region="${food.Region}"
                            data-city="${food.City}"
                            data-category="${food.Category}"
                            data-product="${food.Product}"
                            data-quantity="${food.Quantity}"
                            data-unitprice="${food.UnitPrice}"
                            data-totalprice="${food.TotalPrice}">
                        Edit
                    </button>
                    <button class="btnDelete" data-orderdate="${orderDate}"
                            data-region="${food.Region}"
                            data-product="${food.Product}">
                        Delete
                    </button>
                </td>
            </tr>`;
            tableBody.append(newRow);
        });
    } else {
        tableBody.append("<tr><td colspan='9'>ไม่พบข้อมูล</td></tr>");
    }
}

            $("#foodTable").on("click", ".btnEdit", function () {
                var food = $(this).data();
                $("#editOrderDate").val(food.orderdate);
                $("#editRegion").val(food.region);
                $("#editProduct").val(food.product);
                $("#editQuantity").val(food.quantity);
                $("#editUnitPrice").val(food.unitprice);
                $("#editModal").fadeIn();
            });

            $("#foodTable").on("click", ".btnDelete", function (e) {
                e.preventDefault();
                if (!confirm("ต้องการลบข้อมูลนี้ใช่หรือไม่?")) return;
                var rowData = {
                    orderDate: $(this).data("orderdate"),
                    region: $(this).data("region"),
                    product: $(this).data("product")
                };
                $.ajax({
                    url: '@Url.Action("Delete", "Food")',
                    type: 'POST',
                    data: rowData,
                    success: function (response) {
                        if (response.success) {
                            $("#message").text("ลบข้อมูลสำเร็จ!").fadeIn().delay(3000).fadeOut();
                            $(e.target).closest("tr").remove();
                        } else {
                            $("#message").text("เกิดข้อผิดพลาด: " + response.message).fadeIn().delay(5000).fadeOut();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("เกิดข้อผิดพลาดในการลบข้อมูล");
                    }
                });
            });

            $("#foodTable thead th[data-sort-by]").on("click", function () {
                var sortBy = $(this).data("sortBy");
                var sortDir = $(this).hasClass("asc") ? "desc" : "asc";
                $("#foodTable thead th").removeClass("asc desc");
                $(this).addClass(sortDir);

                $.ajax({
                    url: '@Url.Action("Sort", "Food")',
                    type: 'GET',
                    data: { sortBy: sortBy, sortDir: sortDir },
                    success: function (response) {
                        updateTable(response);
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("เกิดข้อผิดพลาดในการเรียงลำดับข้อมูล");
                    }
                });
            });

            $("#filterDate, #createOrderDate").datepicker({
                dateFormat: 'dd/mm/yy',
                changeMonth: true,
                changeYear: true,
                showAnim: 'slideDown',
                dayNamesMin: ["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"],
                monthNames: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน",
                    "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"],
                monthNamesShort: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."],
                beforeShow: function (input, inst) {
                    setTimeout(function () {
                        inst.dpDiv.find('.ui-datepicker-year option').each(function () {
                            var val = parseInt($(this).val(), 10);
                            $(this).text(val + 543);
                        });
                    }, 0);
                },
                onChangeMonthYear: function (year, month, inst) {
                    setTimeout(function () {
                        inst.dpDiv.find('.ui-datepicker-year option').each(function () {
                            var val = parseInt($(this).val(), 10);
                            $(this).text(val + 543);
                        });
                    }, 0);
                }
            });

            $("#btnCreate").click(function () {
                $("#createModal").fadeIn();
            });

            $("#closeCreateModal, #btnCancelCreate").click(function () {
                $("#createModal").fadeOut();
                $("#createForm")[0].reset();
            });

            $("#btnSaveCreate").click(function () {
                var orderDate = $("#createOrderDate").val();
                var parts = orderDate.split('/');
                var orderDateFormatted = "";
                if (parts.length === 3) {
                    var year = (parseInt(parts[2], 10) - 543).toString();
                    orderDateFormatted = year + '-' + parts[1].padStart(2, '0') + '-' + parts[0].padStart(2, '0');
                }

                var quantityValue = parseInt($("#createQuantity").val());
                var unitPriceValue = parseFloat($("#createUnitPrice").val());

                var foodData = {
                    OrderDate: orderDateFormatted,
                    Region: $("#createRegion").val(),
                    City: $("#createCity").val(),
                    Category: $("#createCategory").val(),
                    Product: $("#createProduct").val(),
                    Quantity: quantityValue,
                    UnitPrice: unitPriceValue,
                    TotalPrice: quantityValue * unitPriceValue
                };
                
                $.ajax({
                    url: '@Url.Action("Create", "Food")',
                    type: 'POST',
                    data: JSON.stringify(foodData),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.success) {
                            $("#message").text("สร้างข้อมูลสำเร็จ!").fadeIn().delay(3000).fadeOut();
                            $("#createModal").fadeOut();
                            $("#createForm")[0].reset();
                            location.reload();
                        } else {
                            $("#message").text("เกิดข้อผิดพลาด: " + response.message).fadeIn().delay(5000).fadeOut();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        console.log("เกิดข้อผิดพลาดในการสร้างข้อมูล");
                    }
                });
            });

            $("#closeEditModal, #btnCancelEdit").click(function () {
                $("#editModal").fadeOut();
            });

            $("#btnSaveEdit").click(function () {
                var formData = {
                    OrderDate: $("#editOrderDate").val(),
                    Region: $("#editRegion").val(),
                    Product: $("#editProduct").val(),
                    Quantity: $("#editQuantity").val(),
                    UnitPrice: $("#editUnitPrice").val()
                };

                $.ajax({
                    url: '@Url.Action("Edit", "Food")',
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $("#message").text("อัปเดตข้อมูลสำเร็จ!").fadeIn().delay(3000).fadeOut();
                            $("#editModal").fadeOut();
                            location.reload();
                        } else {
                            $("#message").text("เกิดข้อผิดพลาด: " + response.message).fadeIn().delay(5000).fadeOut();
                        }
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("เกิดข้อผิดพลาดในการอัปเดตข้อมูล");
                    }
                });
            });
            $("#btnSearch").click(function () {
                var product = $("#searchProduct").val();
                if (!product) {
                    alert("กรุณาใส่ชื่อสินค้าที่ต้องการค้นหา");
                    return;
                }
                $.ajax({
                    url: '@Url.Action("Search", "Food")',
                    type: 'GET',
                    data: { product: product },
                    success: function (response) {
                        updateTable(response);
                        $("#message").text(`แสดงผลการค้นหาสำหรับ: ${product}`).fadeIn().delay(3000).fadeOut();
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("เกิดข้อผิดพลาดในการค้นหา");
                    }
                });
            });

            $("#btnFilter").click(function () {
                var date = $("#filterDate").val();
                if (!date) { alert("กรุณาเลือกวันที่"); return; }
                var parts = date.split('/');
                var formattedDate = (parseInt(parts[2], 10) - 543) + '-' + parts[1].padStart(2, '0') + '-' + parts[0].padStart(2, '0');

                $.ajax({
                    url: '@Url.Action("Filter", "Food")',
                    type: 'GET',
                    data: { date: formattedDate },
                    success: function (response) {
                        updateTable(response);
                        $("#message").text(`แสดงผลการกรองสำหรับวันที่: ${date}`).fadeIn().delay(3000).fadeOut();
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        alert("เกิดข้อผิดพลาดในการกรองข้อมูล");
                    }
                });
            });

            $("#btnRefresh").click(function () {
                location.reload();
            });
        });
    </script>
}